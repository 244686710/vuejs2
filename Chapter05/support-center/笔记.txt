**router-link exact属性：当前属性完全匹配时，链接才能获得active class**

使用 mixin复用代码

自定义v-model
  // 自定义v-model, 需要指定prop,event
  model: {
    prop: 'text',
    event: 'update'
  },

  this.$emit('update', event.currentTarget.value)


css scope处理
.form {
  >>> .content {
    max-width 400px
  }
}

如果使用的是SASS,则需要使用/deep/选择器而不是 >>>


// 路由拦截，重定向
router.beforeEach((to, from, next) => {
  // TODO
  console.log('to', to.name)
  // 判断是否登录
  if (to.meta.private && !state.user) {
    next({
      name: 'login',
      params: {
        wantedRoute: to.fullPath // 目标路由
      }
    })
    return
  }
  next()
})

**** 针对子路由（嵌套路由）使用matched属性访问这些路由对象的列表
 if (to.matched.some(r => r.meta.private) && !state.user) {
    next({
      name: 'login',
      params: {
        wantedRoute: to.fullPath // 目标路由
      }
    })
    return
  }

  if (to.matched.some(r => r.meta.guest) && state.user) {
    next({
      name: 'home'
    })
    return
  }
  next()

* 绑定属性：组件 $attrs
